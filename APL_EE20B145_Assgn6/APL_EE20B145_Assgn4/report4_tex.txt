\documentclass{article}
\usepackage[utf8]{inputenc}

\title{EE2703 Assignment 4}
\author{Valipireddy Venkata Satyanarayana Reddy}
\author{Valipireddy Venkata Satyanarayana Reddy, EE20B145}
\date{$8^{th}$ March 2022}

\usepackage{natbib}
\usepackage{graphicx}
\usepackage{listings}
\usepackage{amsmath}

\begin{document}

\maketitle

\section{Abstract}
We will fit two functions, $e^x$ and $cos(cos(x))$ over the interval $[0,2\pi)$ using their computed Fourier series coefficients.
\section{Introduction}
The Fourier Series of a function $f(x)$ with period $2\pi$ is computed as follows:
\begin{equation}
    f(x) = a_0 + \sum_{n=1}^{+\infty}\{ a_ncos(nx) +b_nsin(nx)\}
\end{equation}
\newline
where , \newline


\[a_0 = \frac{1}{2\pi} \int_0^{2\pi}f(x)dx\]
\[a_n = \frac{1}{2\pi} \int_0^{2\pi}f(x)*\cos(nx)dx\]
\[b_n = \frac{1}{2\pi} \int_0^{2\pi}f(x)*\sin(nx)dx\]


For the sake of this assignment, Since $e^x$ doesn't have a period of $2\pi$,We choose to change its definition in a piece-wise manner to satisfy periodicity.
\newpage
\section{Assignment Questions}
\subsection{Defining the functions}
    Defining the functions $e^x$ and $cos(cos(x))$ that can take both the scalar input and vector input and returns the appropriate output and plotting them over the interval $[-4\pi,2\pi]$. $cos(cos(x))$ is periodic with period $2\pi$ while the function $e^x$ is not periodic. Therefore, the function generated by the fourier series will be $cos(cos(x))$ and $exp(x\%2\pi)$.
    \lstset{language=Python}
    \lstset{frame=lines}
    \lstset{label={lst:code_direct}}
    \lstset{basicstyle=\footnotesize}
    \begin{lstlisting}
        def exp(x):
             return np.exp(x)

        def cos(x):
             return np.cos(np.cos(x))

        t = linspace(-2*pi,4*pi,401)
        Exp = exp(t)
        Cos = cos(t)        
        Exp2 = exp(t%(2*pi))

        figure(1)                                                                          
        plt.semilogy(t,Exp,label = 'original_exp(t)')
        plt.semilogy(t,Exp2,label = 'periodic_exp(t) with period 2*pi')
        plt.grid(True, color = "grey", linewidth = "1.4", linestyle = "--") 
        xlabel(r'$t$'     ,size = 20)
        ylabel(r'exp($t$)',size = 20)
        legend(loc='upper right')
        title(r'exponential of $t$ in semilog axis')

        figure(2)                                                                          
        plot(t,Cos)
        plt.grid(True, color = "grey", linewidth = "1.4", linestyle = "--") 
        xlabel(r'$t$'          ,size = 20)
        ylabel(r'cos(cos($t$))',size = 20)
        title(r'cosine of cos(cos($t$)) in linear axis')
    \end{lstlisting}
    \begin{figure}[h!]
    \centering
    \includegraphics[scale=0.55]{Figure_1.png}
    \caption{$exp(x)$ actual function vs periodic function}
    \label{Figure_1}
    \end{figure}
    \begin{figure}[h!]
    \centering
    \includegraphics[scale=0.55]{Figure_2.png}
    \caption{$cos(cos(x))$}
    \label{Figure_2}
    \end{figure}
\newpage
\subsection{Generating Fourier Coefficients}
Obtaining the first 51 fourier coefficients namely first 26 fourier cosine and first 25 sine coefficients in the following order.
\[
\begin{bmatrix}
    a_0 \\
    a_1 \\
    b_1 \\
    \dots \\
    a_{25} \\
    b_{25}
\end{bmatrix}
\]
\begin{itemize}
\item Creating two new functions to be integrated, namely $u(x,k) = f(x)cos(kx) and v(x,k) = f(x)sin(kx)$. To integrate these, use the option in quad to pass extra arguments to the function being integrated.
\end{itemize}

\begin{lstlisting}
    def u(x,k):                                                                        
         return np.cos(k*x)*f(x)                                                           
    def v(x,k):                                                                         
         return np.sin(k*x)*f(x)                                                        
    
    coef1 = np.zeros(51)                                                               
    coef2 = np.zeros(51)   
    def f(x):
         return exp(x)
    for i in range(51):                                                                
         if(i == 0):
             coef1[i] =quad(u,0,2*pi,args=(i))[0]/(2*pi)
         elif(i%2 != 0):
             coef1[i] =quad(u,0,2*pi,args=((i+1)/2))[0]/pi
         elif(i%2 == 0):
             coef1[i] =quad(v,0,2*pi,args=(i/2))[0]/pi
   

    def f(x):                                                                         
         return cos(x)
    for i in range(51):
         if(i == 0):
             coef2[i] =quad(u,0,2*pi,args=(i))[0]/(2*pi)
         elif(i%2 != 0):
             coef2[i] =quad(u,0,2*pi,args=((i+1)/2))[0]/pi
         elif(i%2 == 0):
             coef2[i] =quad(v,0,2*pi,args=(i/2))[0]/pi
\end{lstlisting}
\newpage
\subsection{Visualizing Fourier Coefficients}
As expected,  $\sum \|b_n\|$ for cos(cos(x)) = 2.09e-14 which is almost 0.
The coefficients for $e^x$ decay faster than that of   
The Log-log plot for Fourier coefficients of $e^x$ is nearly linear because :
\begin{equation}
\int_0^{2\pi} e^x cos(k x) dx = \frac{(e^{2\pi} - 1)}{(k^2 + 1)}    
\end{equation}
and 
\begin{equation}
\int_0^{2\pi} e^x sin(k x) dx = \frac{(-ke^{2\pi} + k)}{(k^2 + 1)}    
\end{equation}
the log-log plots of these functions are linear


The semi-log plot for Fourier Coefficients of $cos(cos(x))$ is linear as the integral converges to a Linear Combination of Bessel functions which are proportional to $e^x$.

\begin{lstlisting}
n = linspace(0,50,51)                                                              
figure(3)                                                                          
plt.semilogy((n),abs(coef1),'ro',label = 'fourier_coeff')
plt.grid(True, color = "grey", linewidth = "1.4", linestyle = "--") 
xlabel(r'$n$ ')
ylabel(r'coefficient[$n$] ')
legend(loc='upper right')
title(r'fourier coefficients of $exp(t)$ in the semilog scale')


figure(4)                                                                           
plt.loglog((n),abs(coef1),'ro',label = 'fourier_coeff')
plt.grid(True, color = "grey", linewidth = "1.4", linestyle = "--") 
xlabel(r'$n$ ')
ylabel(r'coefficient[$n$] ')
legend(loc='upper right')
title(r'fourier coefficients of $exp(t)$ in the loglog scale')


figure(5)                                                                          
plt.semilogy((n),abs(coef2),'ro',label = 'fourier_coeff')
plt.grid(True, color = "grey", linewidth = "1.4", linestyle = "--") 
xlabel(r'$n$ ')
ylabel(r'coefficient[$n$] ')
legend(loc='upper right')
title(r'fourier coefficients of $cos(cos(t))$ in the semilog scale')


figure(6)                                                                          
plt.loglog((n),abs(coef2),'ro',label = 'fourier_coeff')
plt.grid(True, color = "grey", linewidth = "1.4", linestyle = "--") 
xlabel(r'$n$ ')
ylabel(r'coefficient[$n$] ')
legend(loc='upper right')
title(r'fourier coefficients of $cos(cos(t))$ in the loglog scale')
\end{lstlisting}
\begin{figure}[h!]
    \centering
    \includegraphics[scale=0.55]{Figure_3.png}
    \caption{plot of fourier coefficients of $exp(x)$ in semi-log scale}
    \label{Figure_3}
\end{figure}
\begin{figure}[h!]
    \centering
    \includegraphics[scale=0.55]{Figure_4.png}
    \caption{plot of fourier coefficients of $exp(x)$ in log-log scale}
    \label{Figure_4}
\end{figure}
\begin{figure}[h!]
    \centering
    \includegraphics[scale=0.55]{Figure_5.png}
    \caption{plot of fourier coefficients of $cos(cos(x))$ in semi-log scale}
    \label{Figure_5}
\end{figure}
\begin{figure}[h!]
    \centering
    \includegraphics[scale=0.55]{Figure_6.png}
    \caption{plot of fourier coefficients of $cos(cos(x))$ in log-log scale}
    \label{Figure_6}
\end{figure}
\clearpage
\subsection{A Least Squares Approach}
Building on last weeks work we now try a Least Squares Approach to this problem. We linearly choose 400 values of x in the range [0,2$\pi$).It can be Noted that far better approximations were achieved when a larger value(~10000) was used instead of 400. 
We try to solve Equation (1) By using regression on these 400 values 
\[
\quad
\begin{pmatrix} 
1 & \cos(x_1) & \sin(x_1) & .... & \cos(25x_1) & \sin(25x_1)\\
1 & \cos(x_2) & \sin(x_2) & .... & \cos(25x_2) & \sin(25x_2)\\
... & ... & ... & .... & ... & ... \\
1 & \cos(x_{400}) & \sin(x_{400}) & .... & \cos(25x_{400}) & \sin(25x_{400})
\end{pmatrix}
\quad
\begin{pmatrix} 
a_0\\
a_1\\
b_1\\
...\\
a_{25}\\
b_{25}
\end{pmatrix}
=
\quad
\begin{pmatrix} 
f(x_1)\\
f(x_2)\\
...\\
f(x_{400})
\end{pmatrix}
\]

We create the matrix on the left side and call it \(A\) . We want to
solve \(Ac=b\) where \(c\) are the fourier coefficients.

\begin{lstlisting}

x = linspace(0,2*pi,401)                                                            
x = x[:-1] 
b1 = np.exp(x)                                                                      
b2 = np.cos(x)
A = np.zeros((400,51))                                                              
A[:,0] = 1                                                                          

for k in range(1,26):                                                               
    A[:,2*k] = np.sin(k*x)
c1=lstsq(A,b1,rcond = 1)[0]         
c2=lstsq(A,b2,rcond = 1)[0]

\end{lstlisting}

\subsection{Visualizing output of the Least Squares Approach}
\begin{lstlisting}
n = linspace(0,50,51)                                                               
figure(7)                                                                           
plt.semilogy((n),abs(coef1),'ro',label = 'fourier_coeff')
plt.semilogy((n),abs(c1),'go',label = 'least_sq_coeff')
plt.grid(True, color = "grey", linewidth = "1.4", linestyle = "--") 
xlabel(r'$n$ ')
ylabel(r'coefficient[$n$] ')
legend(loc='upper right')
title(r'fourier coefficients of $exp(t)$ in the semilog scale')

figure(8)                                                                                  
plt.loglog((n),abs(coef1),'ro',label = 'fourier_coeff')
plt.loglog((n),abs(c1),'go',label = 'least_sq_coeff')
plt.grid(True, color = "grey", linewidth = "1.4", linestyle = "--") 
xlabel(r'$n$ ')
ylabel(r'coefficient[$n$] ')
legend(loc='upper right')
title(r'fourier coefficients of $exp(t)$ in the loglog scale')

figure(9)                                                                           
plt.semilogy((n),abs(coef2),'ro',label = 'fourier_coeff')
plt.semilogy((n),abs(c2),'go',label = 'least_sq_coeff')
plt.grid(True, color = "grey", linewidth = "1.4", linestyle = "--") 
xlabel(r'$n$ ')
ylabel(r'coefficient[$n$] ')
legend(loc='upper right')
title(r'fourier coefficients of $cos(cos(t))$ in the semilog scale')

figure(10)                                                                           
plt.loglog((n),abs(coef2),'ro',label = 'fourier_coeff')
plt.loglog((n),abs(c2),'go',label = 'least_sq_coeff')
plt.grid(True, color = "grey", linewidth = "1.4", linestyle = "--") 
xlabel(r'$n$ ')
ylabel(r'coefficient[$n$] ')
legend(loc='upper right')
title(r'fourier coefficients of $cos(cos(t))$ in the loglog scale')

\end{lstlisting}
\begin{figure}[h!]
    \centering
    \includegraphics[scale=0.55]{Figure_7.png}
    \caption{plot of fourier coefficients of $exp(x)$ in semi-log scale}
    \label{Figure_7}
\end{figure}
\begin{figure}[h!]
    \centering
    \includegraphics[scale=0.55]{Figure_8.png}
    \caption{plot of fourier coefficients of $exp(x)$ in log-log scale}
    \label{Figure_8}
\end{figure}
\begin{figure}[h!]
    \centering
    \includegraphics[scale=0.55]{Figure_9.png}
    \caption{plot of fourier coefficients of $cos(cos(x))$ in semi-log scale}
    \label{Figure_9}
\end{figure}
\begin{figure}[h!]
    \centering
    \includegraphics[scale=0.55]{Figure_10.png}
    \caption{plot of fourier coefficients of $cos(cos(x))$ in log-log scale}
    \label{Figure_10}
\end{figure}
\clearpage
\subsection{Comparing Predictions}
The maximum absolute error for $e^x$ =1.3327308703353822\newline
Whereas the same metric for cos(cos(x)) = 2.5869790664721666e-15\newline
Our Predictions for $e^x$ are very poor compared to that of cos(cos(x)). This can be fixed by sampling at a larger number of points.\newline 
For instance if we sample at 1e5 points :\newline
The maximum absolute error for $e^x$ =0.005344860583583633\newline
Whereas the same metric for cos(cos(x)) = 2.6342502811925345e-15\newline
This is a small change in accuracy at a very large computational cost. Hence it isn't worth it as far as this assignment is concerned.
\begin{lstlisting}

experr = np.zeros(51)
coserr = np.zeros(51)
for i in range(51):                                                                 
    experr[i] = abs(coef1[i] - c1[i]) 
for i in range(51):                                                                 
    coserr[i] = abs(coef2[i] - c2[i])
figure(11)                                                                         
plot(n,experr,'bo',label = 'error magnitude for the exp($t$)')
plot(n,coserr,'mo',label = 'error magnitude for the cos(cos($t$))')
plt.grid(True, color = "grey", linewidth = "1.4", linestyle = "--") 
legend(loc='upper right')
xlabel(r'$n$',size = 20)
ylabel(r'error_coeff[$n$]',size = 20)
title(r'magnitude error in the coefficients')

print("the largest error in the coefficients of the exp($x$) is %f" %(max(experr))) 
print("the largest error in the coefficients of the cos(cos($x$)) is %f" %(max(coserr)))
\end{lstlisting}
\begin{figure}[h!]
    \centering
    \includegraphics[scale=0.55]{Figure_11.png}
    \caption{error in the magnitude of the fourier coefficients and those by the least square method.}
    \label{Figure_11}
\end{figure}

\subsection{Plotting Results}
\begin{lstlisting}


Exp2 = np.dot(A,coef1)                                                              
Cos2 = np.dot(A,coef2)

t = linspace(0,2*pi,401)
t = t[:-1]
Exp = exp(t)
Cos = cos(t)

figure(12)                                                                          
plt.semilogy(t,Exp2,'go',label = 'exp(t)_from_fourier')
plt.semilogy(t,Exp,label = 'actual_exp(t)',color = 'black')
plt.grid(True, color = "grey", linewidth = "1.4", linestyle = "--") 
xlabel(r'$t$',size = 20)
ylabel(r'exp($t$) ',size = 20)
legend(loc='upper right')
title(r'variation of the exp($t$)')

figure(13)                                                                         
plot(t,Cos2,'go',label = 'cos(cos(t))_from_fourier')
plot(t,Cos,label = 'actual cos(cos(t))',color = 'black')
plt.grid(True, color = "grey", linewidth = "1.4", linestyle = "--") 
xlabel(r'$t$',size = 20)
ylabel(r'cos(cos($t$))',size = 20)
legend(loc='upper right')
title(r'variation of cos(cos($t$))')

show()

\end{lstlisting}
\begin{figure}[h!]
    \centering
    \includegraphics[scale=0.55]{Figure_12.png}
    \caption{variation of the actual $exp(t)$ from the estimated function with fourier coefficients.}
    \label{Figure_12}
\end{figure}
\begin{figure}[h!]
    \centering
    \includegraphics[scale=0.55]{Figure_13.png}
    \caption{variation of actual $cos(cos(x))$ from the estimated function with fourier coefficients.}
    \label{Figure_13}
\end{figure}

It should be noted that $e^x$ is a non periodic function and Fourier series' exists only for periodic functions. Hence we have considered a variation of $e^x$ with period 2pi that has the actual value of $e^x$ only in the range [0,$2\pi$). Hence it is acceptable that there is a large discrepancy in the predicted value of $e^x$ at these boundaries


\clearpage
\section{Conclusion}
We have examined the case of approximating functions using their Fourier
coefficients upto a threshold. Whilst doing so, we perform the
same for two cases, one a continuous function, and the other a function
with finite discontinuities.

The methods adopted in finding the respective Fourier coefficients have
been direct evaluation of the Fourier series formula, as well an Least Square best fit. We notice close matching of the two methods in
case of \(\cos(\cos(x))\) while, there is a larger discrepancy in \(\exp(x)\).

Besides this, we also highlight the fact of non-uniform convergence of
the fourier series in case of finitely discontinuous functions.
\end{document}
